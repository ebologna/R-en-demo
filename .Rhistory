x<-as.numeric(x)
x
x<-as.factor("a")
levels(x)
x<-as.numeric(x)
x
x<-8
5 * x
y <- 5 * x
y
x + y
x - y
x * y
y / x
6 * x + 4 * y
2^3
x^5
x^(1/2)
sqrt(x)
24^(1/5)
x <- sqrt(7)
x
round(x, 2)
round(sqrt(7), 2)
a <- c(1, 5, 8)
b <- c("x", "y", "z")
class(a)
class(b)
l <- c(1, 3, "a")
class(l)
l
pib5 <- c(10000, 3000, 7000, 4000, 15000)
sum(pib5)
sum(pib5) / 5
?mean
mean(pib5)
pib5_10 <- 1.1 * pib5
pib5_10
(diez.pri <- 1:10)
seq(1, 10, .5)
rep(4, 7)
rep("perro", 3)
c(1:5, seq(1, 7, .8), rep(65, 4))
grupo <- c(1, 2)
class(grupo)
grupo
grupo <- as.factor(grupo)
class(grupo)
grupo
levels(grupo)
levels(grupo) <- c("experimental", "control")
levels(grupo)
grupo_2 <- c("experimental", "control")
class(grupo_2)
grupo_2
grupo_2 <- as.factor(grupo_2)
levels(grupo_2)
grupo_2
pertenencia <- c(rep(1, 10), rep(2, 10))
pertenencia <- as.factor(pertenencia)
levels(pertenencia) <- c("experimental", "control")
is.factor(x)
is.infinite(1 / 0)
z <- c(1, 2, 3, 4, 5, 6)
h <- z[z < 5]
z
h
length(z)
length(h)
levels(pertenencia)
pertenencia
length(pertenencia)
sexo <- c(rep(1, 7), rep(2, 3))
sexo <- as.factor(sexo)
levels(sexo) <- c("varones", "mujeres")
edad <- c(25, 28, 31, 20, 21, 22, 25, 28, 28, 28)
sexo_edad_estudiantes <- data.frame(sexo, edad)
class(sexo_edad_estudiantes)
attributes(sexo_edad_estudiantes)
sexo_edad_estudiantes$sexo
class(sexo_edad_estudiantes$sexo)
levels(sexo_edad_estudiantes$sexo)
levels(sexo_edad_estudiantes$sexo) <- c("masculino", "femenino")
write.table(sexo_edad_estudiantes,
"sexo_edad_estudiantes.csv",
sep = ";", row.names = FALSE)
table(sexo_edad_estudiantes$sexo)
table(sexo_edad_estudiantes$edad)
eph.3.18 <- read.table("usu_individual_T318.txt",
sep = ";", header = TRUE
)
x <- seq(1, 10, .1)
y <- 3 - 2 * x
plot(x, y,
xlab = "valor de x", ylab = "valor de y",
main = "Función lineal decreciente"
)
y <- y + rnorm(91)
plot(x, y,
xlab = "valor de x", ylab = "valor de y",
main = "Tendencia lineal decreciente"
)
class(eph.3.18)
names(eph.3.18)
eph.3.18$sexo<-as.factor(eph.3.18$CH04)
levels(eph.3.18$sexo)<-c("varon", "mujer")
levels(eph.3.18$sexo) # verificamos
eph.3.18$ESTADO<-as.factor(eph.3.18$ESTADO)
# se descarta el cero y el cuatro
levels(eph.3.18$ESTADO)<-c(NA, "ocupade", "desocupade", "inactive", NA)
levels(eph.3.18$ESTADO)
table(eph.3.18$sexo)
tabla.sexo<-table(eph.3.18$sexo)
class(tabla.sexo)
# se agregan los totales:
addmargins(table(eph.3.18$sexo))
addmargins(tabla.sexo)
# Y frecuencias relativas:
prop.table(tabla.sexo)
# Frecuencias relativas multiplicadas por 100 y
# redondeadas a dos decimales
round(100*prop.table(table(eph.3.18$sexo)), 2)
tabla.sexo[1]
tabla.sexo[2]
tabla.sexo[3] # no existe
addmargins(tabla.sexo)[3]# es el total
table(eph.3.18$ESTADO, eph.3.18$sexo)
sexo_por_estado<-table(eph.3.18$ESTADO, eph.3.18$sexo)
sexo_por_estado
sexo_por_estado[1]
sexo_por_estado[2]
sexo_por_estado[4]
summary(eph.3.18$sexo)
library(questionr)
?questionr
wtd.table(eph.3.18$sexo, weights = eph.3.18$PONDERA)
# univariada
addmargins(wtd.table(eph.3.18$sexo,
weights = eph.3.18$PONDERA))
#bivariada
addmargins(wtd.table(eph.3.18$ESTADO, eph.3.18$sexo,
weights = eph.3.18$PONDERA))
chisq.test(sexo_por_estado)
prueba_chi<-chisq.test(sexo_por_estado)
# es de una clase especifica
class(prueba_chi)
summary(prueba_chi)
prueba_chi$expected
prueba_chi$method
prueba_chi$statistic
# definimos una nueva variable como factor a partir de NIVEL_ED
eph.3.18$educacion<-as.factor(eph.3.18$NIVEL_ED)
# ajustamos el orden de sus niveles: primero el 7,
# luego del 1 al 6:
eph.3.18$educacion<-factor(eph.3.18$educacion,
levels(eph.3.18$educacion)[c(7, 1:6)])
# la cruzamos con la original para verificar
table(eph.3.18$educacion, eph.3.18$NIVEL_ED)
# y ponemos nombres a los niveles
levels(eph.3.18$educacion)<-c("sin instruccion", "primaria incompleta",
"primaria completa", "secundaria incompleta", "secundaria completa",
"universitaria incompleta", "universitaria completa")
table(eph.3.18$educacion)
eph.3.18$educacion_numerica<-as.numeric(eph.3.18$educacion)
5>4
2+3==6
2>1 & 3<5
2>1 & 3>5
2>1 | 3>5
eph.3.18$edad<-eph.3.18$CH06
eph.3.18$edad[eph.3.18$CH06==-1]<-0
asalariados.con.ingreso.cordoba<-subset(
eph.3.18, eph.3.18$CAT_OCUP==3  &
eph.3.18$AGLOMERADO==13 &
eph.3.18$PP08D1>0 &
is.na(eph.3.18$PP08D1)==FALSE)
summary(asalariados.con.ingreso.cordoba$PP08D1)
mean(asalariados.con.ingreso.cordoba$PP08D1)
sd(asalariados.con.ingreso.cordoba$PP08D1)
median(asalariados.con.ingreso.cordoba$PP08D1)
min(asalariados.con.ingreso.cordoba$PP08D1)
max(asalariados.con.ingreso.cordoba$PP08D1)
x<-c(1,5,8,4,NA,6,4,9,NA)
mean(x)
mean(x, na.rm = TRUE)
sd(
asalariados.con.ingreso.cordoba$PP08D1)/mean(
asalariados.con.ingreso.cordoba$PP08D1)
cv<-function(x){
sd(x)/mean(x)
}
cv(asalariados.con.ingreso.cordoba$PP08D1)
cv<-function(x){
100*round(sd(x)/mean(x),2)
}
cv(asalariados.con.ingreso.cordoba$PP08D1)
cv<-function(x){
paste(100*round(sd(x)/mean(x),2),"%")
}
cv(asalariados.con.ingreso.cordoba$PP08D1)
cramer.v(sexo_por_estado)
cor(
asalariados.con.ingreso.cordoba$educacion_numerica,
asalariados.con.ingreso.cordoba$PP08D1,
method = "spearman")
cor.test(
asalariados.con.ingreso.cordoba$educacion_numerica,
asalariados.con.ingreso.cordoba$PP08D1,
method = "spearman")
?cor.test
cor.test(
asalariados.con.ingreso.cordoba$educacion_numerica,
asalariados.con.ingreso.cordoba$PP08D1,
method = "spearman", alternative = "greater")
cor(asalariados.con.ingreso.cordoba$edad,
asalariados.con.ingreso.cordoba$PP08D1)
cor.test(asalariados.con.ingreso.cordoba$edad,
asalariados.con.ingreso.cordoba$PP08D1)
prueba.correlacion<-cor.test(asalariados.con.ingreso.cordoba$edad,
asalariados.con.ingreso.cordoba$PP08D1)
summary(prueba.correlacion)
prueba.correlacion$conf.int
?cor.test
prueba.correlacion.2<-cor.test(asalariados.con.ingreso.cordoba$edad,
asalariados.con.ingreso.cordoba$PP08D1, conf.level = 0.99)
prueba.correlacion.2$conf.int
summary(asalariados.con.ingreso.cordoba$PP3E_TOT)
asalariados.con.ingreso.y.horas.cordoba<-subset(
asalariados.con.ingreso.cordoba,
asalariados.con.ingreso.cordoba$PP3E_TOT>0)
?lm
modelo.1<-lm(PP08D1~PP3E_TOT,
data = asalariados.con.ingreso.y.horas.cordoba)
summary(modelo.1)
plot(asalariados.con.ingreso.y.horas.cordoba$PP3E_TOT,
asalariados.con.ingreso.y.horas.cordoba$PP08D1)
plot(modelo.1)
modelo.2<-lm(PP08D1~PP3E_TOT+edad,
data = asalariados.con.ingreso.y.horas.cordoba)
summary(modelo.2)
modelo.3<-lm(PP08D1~PP3E_TOT+edad+sexo,
data = asalariados.con.ingreso.y.horas.cordoba)
summary(modelo.3)
modelo.4<-lm(PP08D1~PP3E_TOT+edad+sexo+edad*sexo,
data = asalariados.con.ingreso.y.horas.cordoba)
summary(modelo.4)
t.test(PP08D1~sexo, data = subset(
asalariados.con.ingreso.cordoba,
asalariados.con.ingreso.cordoba$CH03==1))
t.test(PP08D1~sexo, data = subset(
asalariados.con.ingreso.cordoba,
asalariados.con.ingreso.cordoba$CH03==1), alternative="greater")
library(ggplot2)
ggplot(asalariados.con.ingreso.y.horas.cordoba)
ggplot(
asalariados.con.ingreso.y.horas.cordoba)+
geom_histogram(aes(PP08D1))
ggplot(
asalariados.con.ingreso.y.horas.cordoba, aes(PP08D1))+
geom_histogram(bins=25)
ggplot()+
geom_histogram(
data=asalariados.con.ingreso.y.horas.cordoba, aes(PP08D1), bins=25)
ggplot()+
geom_histogram(
data=asalariados.con.ingreso.y.horas.cordoba,
aes(PP08D1, y=..density..), bins=25)
ggplot(
asalariados.con.ingreso.y.horas.cordoba, aes(PP08D1))+
geom_histogram()+geom_freqpoly()
ggplot(
asalariados.con.ingreso.y.horas.cordoba, aes(PP08D1))+
geom_histogram(aes(y=..density..), bins=25)+
geom_density()
ggplot(asalariados.con.ingreso.y.horas.cordoba, aes(PP08D1))+
geom_histogram(fill="green", col="blue", bins = 25)+
geom_freqpoly()
ggplot(asalariados.con.ingreso.y.horas.cordoba)+
geom_histogram(aes(PP08D1, fill=sexo), col="blue", bins = 25)
library("RColorBrewer")
display.brewer.all()
ggplot(asalariados.con.ingreso.y.horas.cordoba)+
geom_histogram(aes(PP08D1, fill=sexo), col="blue")+
scale_fill_brewer(palette="Dark2")
ggplot(asalariados.con.ingreso.y.horas.cordoba)+
geom_histogram(aes(PP08D1, fill=sexo), col="blue", bins = 25)+
scale_fill_manual(values=c("varon"="white", "mujer"="blue"))
ggplot(
asalariados.con.ingreso.y.horas.cordoba)+
geom_point(aes(PP3E_TOT, PP08D1))
ggplot(
asalariados.con.ingreso.y.horas.cordoba)+
geom_point(aes(PP3E_TOT, PP08D1, col=sexo))
ggplot(
asalariados.con.ingreso.y.horas.cordoba)+
geom_point(aes(PP3E_TOT, PP08D1, col=sexo))+
scale_colour_manual(values=c("varon"="green", "mujer"="red"))
ggplot(
asalariados.con.ingreso.y.horas.cordoba)+
geom_point(aes(PP3E_TOT, PP08D1, shape=sexo))
ggplot(
asalariados.con.ingreso.y.horas.cordoba)+
geom_point(aes(PP3E_TOT, PP08D1, col=sexo, shape=sexo))
ggplot(
subset(asalariados.con.ingreso.y.horas.cordoba, asalariados.con.ingreso.y.horas.cordoba$educacion=="universitaria completa" & asalariados.con.ingreso.y.horas.cordoba$CH03==1))+
geom_point(aes(PP3E_TOT, PP08D1, col=sexo, size=edad))
ggplot(
subset(
asalariados.con.ingreso.y.horas.cordoba,
asalariados.con.ingreso.y.horas.cordoba$educacion=="universitaria completa" &
asalariados.con.ingreso.y.horas.cordoba$CH03==1))+
geom_point(aes(PP3E_TOT, PP08D1, col=sexo, size=edad))
(p1<-ggplot(
asalariados.con.ingreso.y.horas.cordoba)+
geom_point(aes(PP3E_TOT, PP08D1))+
facet_grid(cantidad.ocupaciones~sexo))
asalariados.con.ingreso.y.horas.cordoba$cantidad.ocupaciones<-
as.factor(asalariados.con.ingreso.y.horas.cordoba$PP03I)
levels(asalariados.con.ingreso.y.horas.cordoba$cantidad.ocupaciones)<-
c("una ocupación", "más de una ocupación")
ggplot(
asalariados.con.ingreso.y.horas.cordoba)+
geom_point(aes(PP3E_TOT, PP08D1))+
facet_grid(cantidad.ocupaciones~sexo)
(p1<-ggplot(
asalariados.con.ingreso.y.horas.cordoba)+
geom_point(aes(PP3E_TOT, PP08D1))+
facet_grid(cantidad.ocupaciones~sexo))
p1+coord_flip()
p1+ xlab("Horas trabajadas")+
ylab("Ingresos salariales")
p1+ xlab("Horas trabajadas")+
ylab("Ingresos salariales")+
labs(title="Ingresos salariales según cantidad de horas semanales trabajadas",
subtitle="clasificación por sexos y cantidad de ocupaciones",
caption="Fuente: EPH tercer trimestre 2018")
(p2<-p1+ xlab("Horas trabajadas")+
ylab("Ingresos salariales")+
labs(title="Ingresos salariales según cantidad de \n horas semanales trabajadas", # \n indica que baje al otro renglón
subtitle="clasificación por sexos y cantidad de ocupaciones",
caption="Fuente: EPH tercer trimestre 2018"))
p2<-p1+ xlab("Horas trabajadas")+
ylab("Ingresos salariales")+
labs(
title="Ingresos salariales según cantidad de \n horas semanales trabajadas",
# \n indica que baje al otro renglón
subtitle="clasificación por sexos y cantidad de ocupaciones",
caption="Fuente: EPH tercer trimestre 2018")
(p2<-p1+ xlab("Horas trabajadas")+
ylab("Ingresos salariales")+
labs(
title="Ingresos salariales según cantidad de \n horas semanales trabajadas",
# \n indica que baje al otro renglón
subtitle="clasificación por sexos y cantidad de ocupaciones",
caption="Fuente: EPH tercer trimestre 2018"))
ggplot(
asalariados.con.ingreso.y.horas.cordoba, aes(
educacion, PP08D1))+
geom_violin()+stat_summary(fun.y=median, geom="point")
ggplot(
asalariados.con.ingreso.y.horas.cordoba, aes(
educacion, PP08D1))+
geom_violin()+stat_summary(fun.y=median, geom="line")
ggplot(
asalariados.con.ingreso.y.horas.cordoba, aes(
educacion, PP08D1))+
geom_violin()+stat_summary(fun.y=median, geom="point")
ggplot(
tabla_rela_pa)+
geom_bar(aes(rel_pa))
tabla_rela_pa<-as.data.frame(
table(asalariados.con.ingreso.y.horas.cordoba$relacion_parentesco)
)
names(tabla_rela_pa)<-c(
"rel_pa", "casos"
)
table(
asalariados.con.ingreso.y.horas.cordoba$relacion_parentesco)
asalariados.con.ingreso.y.horas.cordoba$relacion_parentesco<-
as.factor(asalariados.con.ingreso.y.horas.cordoba$CH03)
levels(asalariados.con.ingreso.y.horas.cordoba$relacion_parentesco)<-
c("Jefe/a", "Cónyuge / Pareja", "Hijo / Hijastro/a",
"Yerno / Nuera", "Nieto/a", "Madre / Padre",
"Suegro/a", "Hermano/a", "Otros Familiares",
"No Familiares")
table(
asalariados.con.ingreso.y.horas.cordoba$relacion_parentesco)
tabla_rela_pa<-as.data.frame(
table(asalariados.con.ingreso.y.horas.cordoba$relacion_parentesco)
)
names(tabla_rela_pa)<-c(
"rel_pa", "casos"
)
ggplot(
tabla_rela_pa)+
geom_bar(aes(rel_pa,casos), stat = "identity")
ggplot(
tabla_rela_pa)+
geom_bar(aes(rel_pa))
library(demography)
?read.demogdata
?read.demogdata
?demography
lca2=lca(dat,series=names(dat$rate)[3],years=dat$year,ages=dat$age,max.age=100)
USA_mortalidad<-read.demogdata(
file="Mx_1x1.txt",popfile="Exposures_1x1.txt", type="mortality",
label="USA",skip=2, scale=1 )
plot(x, series, datatype, years, ages, max.age,
transform, plot.type, type = "l", main, xlab, ylab,)
plot(USA_mortalidad, series= "Total")
plot(USA_mortalidad, series= "Total", transform = FALSE)
plot(USA_mortalidad, series= "Female")
plot(USA_mortalidad, series= "Female",
main = "Tasas de mortalidad femeninas en Estados Unidos (1933-2017)",
xlab="edad",
ylab="Logaritmo de las tasas de mortalidad")
plot(USA_mortalidad, series= "Total", plot.type = "time",
main="USA: Evolución de las tasas específicas \n  de mortalidad por edad (1933-2017)",
xlab = "año",
ylab = "logaritmo de las tasas de mortalidad")
lifetable(x, series = names(data$rate)[1], years = data$year,
ages = data$age, max.age = min(100, max(data$age)),
type = c("period", "cohort"))
tabla_de_mortalidad<-
lifetable(USA_mortalidad, series="Total", years=2016)
tabla_de_mortalidad_compara<-
lifetable(USA_mortalidad, series="Total", years=c(1933,2016))
plot(tabla_de_mortalidad)
plot(tabla_de_mortalidad_compara)
ev_nac<-
life.expectancy(USA_mortalidad, series = "Total")
ev_nac
espe_vida_mujeres_25_1945<-
life.expectancy(USA_mortalidad, series = "Female",
age = 25, years = 1945)
espe_vida_mujeres_25_1945
IM<-
sex.ratio(USA_mortalidad)
plot(IM)
lca2=lca(USA_mortalidad,series=names(USA_mortalidad$rate)[3],
years=USA_mortalidad$year,
ages=USA_mortalidad$age,max.age=100)
forecast.lca(lca2, h=50, se=c("innovdrift"), jumpchoice=c("fit"), level=90)
forecast.lca(lca2, h=50, se=c("innovdrift"), jumpchoice=c("fit"), level=90)
library(demography)
forecast.lca(lca2, h=50, se=c("innovdrift"), jumpchoice=c("fit"), level=90)
install.packages("demography")
summary(lca2)
lca2<-lca(USA_mortalidad,
series=names(USA_mortalidad$rate)[3],
years=USA_mortalidad$year,
ages=USA_mortalidad$age,max.age=100)
forecast.lca(
lca2, h=50, se=c("innovdrift"),
jumpchoice=c("fit"), level=90)
forecast.lca(
lca2, h=50, se=c("innovdrift"),
jumpchoice=c("fit"), level=90)
forecast(
lca2, h=50, se=c("innovdrift"),
jumpchoice=c("fit"), level=90)
proyeccion.1<-forecast(
lca2, h=50, se=c("innovdrift"),
jumpchoice=c("fit"), level=90)
plot(proyeccion.1)
plot(proyeccion.1, title("Usa: Tatas brutas ed mortalidad (2018-2067"))
plot(proyeccion.1, title("Usa: Tatas brutas ed mortalidad (2018-2067"))
plot(proyeccion.1)
plot(proyeccion.1, main="Usa: Tatas brutas de mortalidad (2018-2067)", xlab="edad", ylab="logarirmo de las tasas de mortalidad")
plot(proyeccion.1, main="Usa: Tatas brutas de mortalidad (2018-2067)", xlab="edad", ylab="logarirmo de las tasas de mortalidad")
plot(proyeccion.1, main="Usa: Tatas brutas de mortalidad (2018-2067)",
xlab="edad", ylab="logarirmo de las tasas de mortalidad")
summary(lca2)
?mean.demogdata
mean(USA_mortalidad)
mean(USA_mortalidad, transform = FALSE)
median(USA_mortalidad, transform = FALSE)
mean(USA_mortalidad, transform = FALSE)
medias_mortalidad<-mean(USA_mortalidad, transform = FALSE)
View(medias_mortalidad)
medias_mortalidad_df<-as.data.frame(medias_mortalidad[y])
View(medias_mortalidad)
medias_mortalidad_df<-as.data.frame(medias_mortalidad)
View(medias_mortalidad_df)
names(medias_mortalidad_df)<-c("edad", "tasa media de mortalidad")
plot(medias_mortalidad)
medias_mortalidad<-mean(USA_mortalidad, transform = TRUE)
plot(medias_mortalidad)
medianas_mortalidad<-median(USA_mortalidad)
plot(medianas_mortalidad)
edades_seleccionadas<-extract.ages(USA_mortalidad, c(20,35))
mortalidad_jovenes<-extract.ages(USA_mortalidad, 13:19)
plot(mortalidad_jovenes)
mortalidad_jovenes<-extract.ages(USA_mortalidad, 13:19, combine.upper = FALSE)
plot(mortalidad_jovenes)
extract.years(USA_mortalidad, 1945)
mortalidad_1945<-extract.years(USA_mortalidad, 1945)
plot(mortalidad_1945)
mortalidad_1945<-extract.years(USA_mortalidad, 1945, series="Total")
View(USA_mortalidad)
plot(mortalidad_1945, series = "Total")
plot(mortalidad_jovenes, series = "Total")
plot(mortalidad_jovenes, series = "Total", main = "USA: Tasas brutas de mortalidad \n (1933 - 2017)")
plot(mortalidad_jovenes, series = "Total", main = "USA: Tasas brutas de mortalidad \n (1933 - 2017)", ylab = "logaritmo de las tasas de mortalidad", xlab = "edad")
mortalidad_jovenes_1945<-extract.ages(mortalidad_1945, 13:19, combine.upper = FALSE)
plot(mortalidad_jovenes_1945, series = "Total")
plot(mortalidad_jovenes_1945, series = "Female")
plot(mortalidad_jovenes_1945,
series = "Female",
main = "USA: Tasas de mortalidad de mujeres entre 13 y 19 años \n (1945)",
ylab = "logaritmo de las tasas de mortalidad", xlab = "edad")
mortalidad_jovenes_1945<-extract.ages(mortalidad_1945, 13:19, combine.upper = FALSE, transform=FALSE)
